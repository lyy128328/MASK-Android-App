1.
Hello大家好，我們是第11組，我們做的app叫做Deja Vu，他基本上是一個即時通訊軟體，
但他的核心概念和提供的主要服務和市面上的通訊軟體很不一樣，所以可以做出是賞區隔
至於為什麼取叫做Deja Vu，我之後會再作解釋
2.
先來講一下我們的分工，這個app的idea是我發想出來的，所以需要有哪些核心的功能也是我決定的
而他則是負責UI design的部份，包括封面、icon、整體風格與主題的設計都是由他來負責
至於實作寫code的部分我們都是一起做的，沒有很明確的分工，工作量也大約是一半一半
3.
為甚麼會想設計這個app呢?先請大家想一想，你們的fb好友可能有幾百甚至上千個好友，
但平時真的會連絡聊天的大概有多少?可能多數人都不到50個，國小國中最好的朋友現在可能都沒連絡了
這是為甚麼呢?可能是因為生活沒有交集了，怕主動找對方聊天，聊兩三句就尷尬，
因為我們對彼此都有既定印象，知道對方是個以前很要好，但很久沒聯絡的朋友，
那要怎麼打破這個既定印象呢?我們想到了一個方法，就是匿名，
這個app可以讓使用者用匿名跟fb好友聊天，可以是我匿名，或你匿名，或是雙方都匿名，
這樣就可以擺脫既定印象，用最真誠的自我跟對方聊天，進而重新認識彼此
這也是為什麼我們把名稱取叫"Deja Vu"的原因，因為跟你聊天的一定是你曾經認識的朋友
但又不確定他到底是誰，這是一種似曾相識的感覺，
我們的目標就是讓使用者能在這個平台上跟朋友聊天之後，從「似曾相似」昇華成「重新認識」
4.
接下來，簡單介紹一下這個app提供的功能，
因為我們目標是重新認識老朋友，所以讓使用者用fb登入，fb的好友就成為Deja Vu的好友名單
再來就是讓使用者自己決定是要用真實身分還是匿名身分來跟好友聊天
聊天的部分 我們提供了1對1私訊和開群組群聊兩種模式，
聊天時除了傳送文字，也可以傳表情符號和照片
另外也有搜尋功能，讓使用者可以在龐大的好友名單中快速找到想聊天的人
5.
接著，進入到技術重點的部分
我們主要有三項技術重點，連動facebook，server-client的架構和XMPP即時通訊協定
6
連動facebook是要先去註冊facebook developer，新增一個app project，這時會得到一組facebook app id
將這組id寫到project裡，然後再把facebook sdk加入project裡，最後再把Android hashkey加到facebook developer中
這樣就可以讓project和facebook連動了

7.
XMPP是一種以XML為基礎的開放式即時通訊協定，他的關鍵特色是，分散式的即時通訊系統，以及使用XML串流。
XMPP網路是基於伺服器的，也就是說即客戶端之間彼此不直接交談，
Jabber識別符（JID）是用戶登入時所使用的帳號，看起來通常像一個電子郵件位址，如someone@example.com；

前半部分為使用者名稱，後半部分為XMPP伺服器網域名稱，兩個欄位以@符號區隔

8.
server client的架構大致上就是像這張圖畫的，
sender想要發出一個message，他就會送一個request給server，server成功送到就會回送一個response
接著，server會將剛剛收到的message發送給receiver，就也會送一個request給receiver，
最後，receiver成功收到後就會回一個response給server，這樣就完成了用server-client架構傳訊息的過程了
